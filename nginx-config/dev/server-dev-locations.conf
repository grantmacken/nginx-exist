

location ~* ^(.*)\.html$ {
  gzip_static  off;
  try_files $uri @proxy;
  }


##########################
# IMAGES
# look for images on disk first, reverse proxied thru eXist if not found
# images don't have to have an extension ref. try files
# don't bother to gzip or look for gzip file
# don't make browser cache images with expires set to -0
# SVG images are the exception as we want to gzip these
# don't use proxy cache on dev server
# #######################


location ~* ^(/resources/icons.+)$ {
  gzip_static  on;
  expires epoch;
  add_header Pragma no-cache;
  try_files  $uri $uri.svg.gz $uri.svg  @proxy;
  log_not_found off;
}

location ~* ^(/resources/images/svg.+)$ {
  gzip_static  on;
  expires epoch;
  add_header Pragma no-cache;
  try_files  $uri $uri.svg.gz $uri.svg  @proxy;
  log_not_found off;
}

location ~* ^(/resources/images.+)$ {
  gzip_static  off;
  expires epoch;
  add_header Pragma no-cache;
  try_files $uri $uri.jpg $uri.jpeg $uri.gif $uri.png $uri.ico  @proxy;
  log_not_found off;
}

##########################
# STYLES AND SCRIPTS
# look for gzipped css on disk first [ filename.css.gz ]
# look for css on disk next [ filename.css ]
# css don't have to have an extension ref. try files
# don't make browser cache css with expires set to -0
# #######################

location ~* ^(/resources/styles.+)$ {
  gzip_static on;
  expires epoch;
  add_header Pragma no-cache;
  try_files $uri $uri.css.gz $uri.css  @proxy;
  }

location  ~* ^(/resources/scripts.+)$ {
  gzip_static on;
  expires epoch;
  add_header Pragma no-cache;
  try_files $uri  $uri.js.gz  $uri $uri.js @proxy;
  }

##########################
# our development reverse proxy
# does not include a proxy cache
# #######################


location @proxy {
  rewrite ^/?(.*)$ /exist/apps/$domain/$1 break;
  #proxy_set_header Host $http_host;
  #proxy_set_header X-Real-IP $remote_addr;
  proxy_pass http://localhost:8080;
  }
