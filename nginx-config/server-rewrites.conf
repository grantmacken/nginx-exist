#############################################################
# api get query rest endpoints
# add xq extension to endpoint and retain query string
# restrict endpoint to allways lowercase chars [a-z] + '?' +
# endpoint must have a query char '?' TODO must have  .+ =  .+ pattern
# rewrite "^/?(?:[a-z]+)([?]{1}.+)$" /$1.xq$2 break;
rewrite "^/?(webmention)([?]{1}.+)$" /$1.rest$2 break;

# api get query restxq crud router endpoints

rewrite "^/?(micropub)([?]{1}.+)?$" /$1.restxq$2 break;
################################################################
# a bundle of rewrites for serving html pages eXist templating handles html
# pages so they get proxied with html extension
# 1. home page eg.  '' , '/' '/index'  '/index.html'
# 2. archived posts in the form of a short url
#  consists of 5-6 chars 
#  char 1 is the ' kind of post' tag identifier e.g. n = note, a = article
#  char 2,3,4 is the base 60 for short date number
#     short-date-number =  year '00' plus days in year '000' e.g. 16001
#  char 5-6 plus is the nth number of an 'kind of post' published that day 
#  example: n3Uo1 = the first note published on 2016-07-06
# 3-6. shotcuts to resources
# 7-8  pages
# The last catches everything with limited
# set of legit chars with or without an html extension. This  will however let
# through other extensions like image, script and style resources e.g. .css, .js
#  .jpeg svg etc.
##################################################################
#######
rewrite "^/?icons$" /resources/icons/icons.svg break;
rewrite "^/?styles$" /resources/styles/main.css break;
rewrite "^/?scripts$" /resources/scripts/main.js break;
rewrite "^/?(?:index|index.html)?$" /pages/home.html break;
rewrite "^/?([a-z]{1}[0-9A-HJ-NP-Z_a-km-z]{3}[1-9]{1}([0-9]{1})?)$" /posts/$1.html break;
rewrite "^/?([\w\-_]+)/?(?:index|index.html)?$" /pages/$1/index.html break;
rewrite "^/?(((?:[\w\-_]+)/)+(?:[\w\-_]+))(?:\.(htm(l)?|md))?$"  /pages/$1.html break;
#######
# Our get http query ( machine to machine api endpoints )
# will generate responses other than html
#
# e.g. xml or json  or just response headers
# with ngnix the 'location directive' does not include the query part of the url
# we proxy these through the eXist rest api so we do not go through the normal
# eXist apps controller and eXist templating
#  example /webmention.xq?source=""&target=""
# our endpoints are lowercase a-z charset with xq extension
# the lowercase a-z charset is arbitary
#########################

##########################
# route to restxq router endpoint
# remove Authorisation header for eXist
##########################

location   ~* ^(/[a-z]+\.restxq)$ {
  rewrite ^/([a-z]+)\.restxq(.*)$ /exist/restxq/$domain/$1$2 break;
  proxy_set_header Host            $host;
  proxy_set_header X-Real-IP       $remote_addr;  
  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  proxy_set_header X-Authorization $http_authorization;
  proxy_set_header Authorization   "";
  proxy_pass                       http://localhost:8080;

  }

##########################
# our rest api endpoints
#  use extension xq
##########################

location   ~* ^(/[a-z]+\.rest)$ {
  rewrite ^/([a-z]+)\.rest(.*)$ /exist/rest/apps/$domain/modules/api/$1.xq$2 break;
    proxy_pass_request_body off;
    proxy_pass_request_headers on;
    proxy_set_header Content-Length "";
    proxy_pass http://localhost:8080;
  }


